name: Run Django Tests with Redis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG: true
      DATABASE_URL: postgres://django:${{ secrets.DB_PASSWORD }}@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
      JWT_ACCESS_TOKEN_LIFETIME: ${{ secrets.JWT_ACCESS_TOKEN_LIFETIME }}
      JWT_REFRESH_TOKEN_LIFETIME: ${{ secrets.JWT_REFRESH_TOKEN_LIFETIME }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y gdal-bin libgdal-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Debug environment variables
      run: |
        echo "DEBUG: Environment Variables"
        env | grep -E "SECRET_KEY|DATABASE_URL|REDIS_URL|JWT"

    - name: Wait for services
      run: |
        echo "Waiting for PostgreSQL..."
        while ! pg_isready -h localhost -p 5432; do
          sleep 1
        done
        echo "Waiting for Redis..."
        while ! redis-cli -h localhost ping; do
          sleep 1
        done

    - name: Run tests
      run: |
        python manage.py migrate
        python manage.py test
